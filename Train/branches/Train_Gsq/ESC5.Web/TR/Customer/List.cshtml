@model CustomerListVM


@using (Html.KendoForm("c.frmSearch", "Search"))
{
    <!--KendoTextBoxFor： HtmlHelper Class 客户端输入控件 m绑定VM属性-->
    <div class="row">
        <div class="clearfix">
            <div class="e2-col-lg-3 e2-col-md-3 e2-col-sm-3 e2-col-xs-3">
                @Html.NgLabelFor(m => m.Input.Name_)
                @Html.KendoTextBoxFor(m => m.Input.Name_)
            </div>

            <div class="e2-col-lg-3 e2-col-md-3 e2-col-sm-3 e2-col-xs-3">
                @Html.NgLabelFor(m => m.Input.Gender)
                @Html.KendoNumericBoxFor(m => m.Input.Gender)
            </div>


            <div class="e2-col-lg-3 e2-col-md-3 e2-col-sm-3 e2-col-xs-3">
                @Html.NgLabelFor(m => m.Input.User)
                @Html.KendoDropDownListFor(m => m.Input.User).DataSource("c.vm.UserList").OptionLabel()
            </div>


            <div class="e2-col-lg-2 e2-col-md-8 e2-col-sm-8 e2-col-xs-8">
                <kendo-button type="button" ng-click="c.Search_click()" icon="'k-icon k-i-search'">
                    <span translate="Search"></span>
                </kendo-button>
            </div>

        </div>
    </div>

    <div style="margin-top:5px;">
        <!-- kendo-grid 控件 pb-kendo-grid为kendogrid绑定数据。该指令值为绑定的数据，通常是c.vm.该指令将绑定数据的ResultList属性和Input.ListInput属性关联到kendogrid的行数据、分页数据、排序数据上 同时支持页面跳转回来时保持这些表格状态 -->
        <!-- pb-kendo-grid-cols 列设置-->
        <!-- OT 表示使用模板且模板名称为固定的 Operation-template -->
        <table kendo-grid="c.grdCustomer" k-data-source="DataSource" options="GridOptions" pb-kendo-grid="c.vm"
               pb-kendo-grid-cols="[
                   'Email',
                   'Name_,T,70px|{style: \'text-align: center;background-color:lightgreen\'}',
                   'User,|Display',
                   'Gender,,80px',
                   'RegisterDate,|Display',
                   'Spending',
                   'Vip,|Display:\'Customer_RankEnum\'',
                   'Active,|Display',
                   'OtherGender',
                   ',OT',
                   { command:[
                       { name:'edit', visible:IsActive },
                       { text:'Delete', 
                         name:'Delete', 
                         iconClass:'delete',                   
                         click:c.btnDelete_Click, 
                         visible:c.currencyIsActive
                       },
                       { text:'Restore', 
                         name: 'Restore',
                         iconClass:'undo',
                         click:c.btnRestore_Click,
                         visible:c.currencyIsActive
                        },
                     ],
                     width: 160, 
                     attributes: { style: 'text-align: center' }
                   }
               ]"
               class="myTable">
            <!-- Display相关:  Display可自适应多种类型，个别情况下，也可以使用更具体的pipe.
                     1.Dict用于枚举类型的文本显示时要指定枚举类型名
                     2.Display用于显示数字时，可指定小数位数，缺省为2
            -->
            <!--Table 内本地化字段名显示文本时 key 值规范为表名加下划线加字段名 -->
            <thead>
                <tr>
                    <th class="tableth"><span translate="Customer_Email"></span></th>
                    <th class="tableth"><span translate="Customer_Name_"></span></th>
                    <th class="tableth"><span translate="Customer_User"></span></th>
                    <th class="tableth"><span translate="Customer_Gender"></span></th>
                    <th class="tableth"><span translate="Customer_RegisterDate"></span></th>
                    <th class="tableth"><span translate="Customer_Spending"></span></th>
                    <th class="tableth"><span translate="Customer_Vip"></span></th>
                    <th class="tableth"><span translate="Customer_Active"></span></th>
                    <th class="tableth"><span translate="Customer_OtherGender"></span></th>
                    <th class="tableth"></th>
                    <th class="tableth"></th>
                </tr>
            </thead>
        </table>
        <!--kendo grid 列设置中使用的模板写在 table 后面-->
        <!--kendo grid 的工具栏模板名固定为 Toolbar-template-->
        <!--列使用的模板 命名为列名加 -template-->
        <!--表格操作列模板 固定命名为 Operation-template-->
        <!--对于 at Url.State nav:action-->
        <script Id="Toolbar-template" type="text/x-kendo-template">
            <kendo-button @Url.State("forward:Add") icon="'k-icon k-i-add'" type="button">
                <span translate="Add"></span>
            </kendo-button>
        </script>

        <!--"helper方法帮助生成链接的ngState的属性，点击即切换ngState。多个参数keyvalue对用逗号分隔"-->
        <script Id="Name_-template" type="text/x-kendo-template">
            <a class="a-link" @Url.State("forward:Edit(Id:#=Id#)")>#=Name_#</a>
        </script>

        <script Id="Operation-template" type="text/x-kendo-template">
            <kendo-button type="button" icon="'k-icon k-i-delete'" ng-click="c.Delete_click(#=Id#,'#=Name_#')">
                <span translate="Delete"></span>
            </kendo-button>
        </script>
    </div>
}
